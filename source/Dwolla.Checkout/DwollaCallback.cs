using System;

namespace Dwolla.Checkout
{
    /// <summary>
    /// If a callback URL was provided during the DwollaRequest, the transaction details will be POSTed to the URL in a JSON-encoded string. This class
    /// represents the POSTed JSON.
    /// </summary>
    public class DwollaCallback
    {
        public DwollaCallback()
        {
            //by default, fail
            this.Status = DwollaStatus.Failed;
        }

        /// <summary>Amount of the purchase order formatted to 2 decimal places.</summary>
        public decimal Amount { get; set; }

        /// <summary>Unique purchase order ID generated by Off-Site Gateway.</summary>
        public string CheckoutId { get; set; }

        /// <summary>Date and time in which the funds are to be cleared into the destination account.</summary>
        public DateTime ClearingDate { get; set; }

        /// <summary>Any errors that occurred during the checkout.</summary>
        public string Error { get; set; }
        
        /// <summary>Order ID provided during the request.</summary>
        public string OrderId { get; set; }

        /// <summary>HMAC-SHA1 hexadecimal hash of the CheckoutId and amount ampersand separated using the consumer secret of the application as the hash key.</summary>
        public string Signature { get; set; }

        /// <summary>Value of 'Completed' if the transaction was successful. If any errors occurred, the status will have a value of 'Failed'.</summary>
        public DwollaStatus Status { get; set; }
        
        
        /// <summary>Flagged to 'true' if purchase order for testing purposes only, 'false' otherwise.</summary>
        public bool TestMode { get; set; }
        
        /// <summary>Dwolla transaction ID to identify the successful transaction. If in test mode, the transaction ID has a value of 1.</summary>
        public long? TransactionId { get; set; }

    }

    /// <summary>
    /// Status of the checkout session. Possible values: Completed, and Failed.
    /// </summary>
    public enum DwollaStatus
    {
        Failed,
        Completed = 0x1
    }

    
}